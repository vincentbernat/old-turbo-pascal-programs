Uses graph,crt,litclavier;

Const briques : FillPatternType = ($AF,$A8,$AF,$00,$EE,$AA,$EE,$00);
      pont : fillpatternType = ($CC,$CC,$00,$00,$CC,$CC,$00,$00);
      pierres : FillPatternType = ($00,$C1,$62,$14,$55,$22,$C1,$00);
      plancher : FillPatternType = ($FF,$FF,$18,$7C,$FF,$FF,$07,$FF);

Var origMode:integer;
    pilote,mode:integer;
    i,w,t:integer;
    ch:char;
    Genere:pointer; {pointe sur la partie qui va ˆtre effac‚e par les directions}
    GenereT:boolean; {sert … savoir si les directions sont affich‚es}
    Homme,Homme2,Homme3,Homme4:pointer;
    Bandit,Bandit2,Bandit3,Bandit4:pointer;
    Bombe,clef:pointer;

procedure fenetre(x,y,largeur,hauteur:integer;var p:pointer);
begin
  getmem(p,imagesize(x,y,x+largeur,y+hauteur));
  getimage(x,y,x+largeur,y+hauteur,p^);
end;

Procedure Point(x,y:integer);
begin
line(x,y,x,y);
end;

Procedure VerifyGraph;
var Erreur:integer;
begin
erreur:=graphResult;
if erreur<>0 then
             begin
             TextMode(origMode);
             Clrscr;
             Writeln('ERREUR GRAPHIQUE...');
             Writeln('('+GraphErrorMsg(erreur)+')');
             Writeln('Arrˆt imm‚diat du programme...');
             Halt;
             end;
end;

Procedure LigneI(x1,y1,x2,y2:integer);
begin
Line(y1,x1,y2,x2);
end;

Procedure PointI(x1,y1:integer);
begin
Point(y1,x1);
end;

procedure MetHomme(x,y:integer;efface,bandit:boolean;forme:byte);
var cc:integer;
begin
cc:=GetColor;
SetColor(0);
if forme=1 then
           begin
           if not(efface) then if not(bandit) then setcolor(1) else setcolor(3);
           Line(x+3,y,x+8,y);
           Line(x+1,y+1,x+9,y+1);
           Line(x,y+2,x+2,y+2);
           Line(x,y+3,x+2,y+3);
           Line(x,y+4,x+1,y+4);
           Point(x,y+5);
           Line(x+9,y+2,x+11,y+2);
           Line(x+10,y+3,x+11,y+3);
           if not(efface) then SetColor(2);
           Line(x+3,y+2,x+7,y+2);
           Line(x+3,y+3,x+8,y+3);
           Line(x+2,y+4,x+9,y+4);
           Line(x+1,y+5,x+9,y+5);
           Line(x,y+6,x+9,y+6);
           Line(x+1,y+7,x+9,y+7);
           Line(x+2,y+8,x+8,y+8);
           Line(x+4,y+9,x+8,y+9);
           Line(x+5,y+10,x+8,y+10);
           Line(x+6,y+11,x+9,y+11);
           Line(x+6,y+12,x+10,y+12);
           Point(x,y+9);
           Line(x,y+10,x+1,y+10);
           Line(x,y+11,x+1,y+11);
           Line(x-1,y+12,x+2,y+12);
           Line(x-2,y+13,x+2,y+13);
           Line(x-2,y+14,x+2,y+14);
           Line(x-2,y+15,x+1,y+15);
           Line(x-1,y+16,x,y+16);
           Line(x+3,y+17,x+4,y+17);
           Line(x+2,y+18,x+5,y+18);
           Line(x+2,y+19,x+5,y+19);
           Line(x+3,y+20,x+4,y+17);
           Line(x+12,y+17,x+13,y+17);
           Line(x+11,y+18,x+14,y+18);
           Line(x+11,y+19,x+14,y+19);
           Line(x+12,y+20,x+14,y+17);
           if not(efface) then if not(bandit) then setcolor(1) else setcolor(3);
           Line(x+1,y+9,x+3,y+9);
           Line(x+2,y+10,x+4,y+10);
           Line(x+2,y+11,x+5,y+11);
           Line(x+3,y+12,x+5,y+12);
           Line(x+3,y+13,x+5,y+13);
           Line(x+3,y+14,x+5,y+14);
           Line(x+2,y+15,x+4,y+15);
           Line(x+1,y+16,x+3,y+16);
           Point(x+2,y+17);
           Point(x+9,y+9);
           Line(x+9,y+10,x+10,y+10);
           Line(x+10,y+11,x+11,y+11);
           Point(x+11,y+12);
           Line(x+10,y+13,x+10,y+17);
           Line(x+11,y+13,x+11,y+17);
           Point(x+6,y+5);
           Point(x+8,y+5);
           Point(x+1,y+19);
           Line(x+1,y+20,x+2,y+20);
           Line(x+1,y+21,x+11,y+21);
           Point(x+11,y+20);
           Line(x+2,y+22,x+10,y+22);
           Line(x+2,y+23,x+11,y+23);
           Line(x+2,y+24,x+11,y+24);
           Line(x+2,y+25,x+11,y+25);
           Line(x+3,y+26,x+11,y+26);
           Line(x+3,y+27,x+11,y+27);
           Line(x+3,y+28,x+10,y+28);
           Line(x+8,y+29,x+10,y+29);
           if not(efface) then if not(bandit) then setcolor(3) else setcolor(1);
           Line(x+6,y+13,x+9,y+13);
           Line(x+6,y+14,x+9,y+14);
           Line(x+4,y+15,x+9,y+15);
           Line(x+4,y+16,x+9,y+16);
           Line(x+5,y+17,x+9,y+17);
           Line(x+5,y+18,x+10,y+18);
           Line(x+5,y+19,x+10,y+19);
           Line(x+4,y+20,x+10,y+20);
           Line(x+3,y+29,x+7,y+29);
           Line(x+2,y+30,x+11,y+30);
           Line(x+2,y+31,x+11,y+31);
           Line(x+1,y+32,x+5,y+32);
           Line(x,y+33,x+4,y+33);
           Line(x,y+34,x+4,y+34);
           Line(x,y+35,x+4,y+35);
           Line(x+1,y+36,x+4,y+36);
           Line(x+2,y+37,x+4,y+37);
           Point(x+3,y+38);
           Line(x+7,y+32,x+11,y+32);
           Line(x+7,y+33,x+10,y+33);
           Line(x+7,y+34,x+10,y+34);
           Line(x+7,y+35,x+10,y+35);
           Line(x+7,y+36,x+10,y+36);
           Line(x+7,y+37,x+11,y+37);
           Line(x+8,y+38,x+12,y+38);
           Line(x+9,y+39,x+13,y+39);
           setcolor(0);
           Point(x+6,y+24);
           Rectangle(x+7,y+25,x+8,y+26);
           Line(x+7,y+27,x+7,y+29);
           end;
if forme=2 then
           begin
           if not(efface) then if not(bandit) then setcolor(1) else setcolor(3);
           Line(x-3,y,x-8,y);
           Line(x-1,y+1,x-9,y+1);
           Line(x,y+2,x-2,y+2);
           Line(x,y+3,x-2,y+3);
           Line(x,y+4,x-1,y+4);
           Point(x,y+5);
           Line(x-9,y+2,x-11,y+2);
           Line(x-10,y+3,x-11,y+3);
           if not(efface) then SetColor(2);
           Line(x-3,y+2,x-7,y+2);
           Line(x-3,y+3,x-8,y+3);
           Line(x-2,y+4,x-9,y+4);
           Line(x-1,y+5,x-9,y+5);
           Line(x,y+6,x-9,y+6);
           Line(x-1,y+7,x-9,y+7);
           Line(x-2,y+8,x-8,y+8);
           Line(x-4,y+9,x-8,y+9);
           Line(x-5,y+10,x-8,y+10);
           Line(x-6,y+11,x-9,y+11);
           Line(x-6,y+12,x-10,y+12);
           Point(x,y+9);
           Line(x,y+10,x-1,y+10);
           Line(x,y+11,x-1,y+11);
           Line(x+1,y+12,x-2,y+12);
           Line(x+2,y+13,x-2,y+13);
           Line(x+2,y+14,x-2,y+14);
           Line(x+2,y+15,x-1,y+15);
           Line(x+1,y+16,x,y+16);
           Line(x-3,y+17,x-4,y+17);
           Line(x-2,y+18,x-5,y+18);
           Line(x-2,y+19,x-5,y+19);
           Line(x-3,y+20,x-4,y+17);
           Line(x-12,y+17,x-13,y+17);
           Line(x-11,y+18,x-14,y+18);
           Line(x-11,y+19,x-14,y+19);
           Line(x-12,y+20,x-14,y+17);
           if not(efface) then if not(bandit) then setcolor(1) else setcolor(3);
           Line(x-1,y+9,x-3,y+9);
           Line(x-2,y+10,x-4,y+10);
           Line(x-2,y+11,x-5,y+11);
           Line(x-3,y+12,x-5,y+12);
           Line(x-3,y+13,x-5,y+13);
           Line(x-3,y+14,x-5,y+14);
           Line(x-2,y+15,x-4,y+15);
           Line(x-1,y+16,x-3,y+16);
           Point(x-2,y+17);
           Point(x-9,y+9);
           Line(x-9,y+10,x-10,y+10);
           Line(x-10,y+11,x-11,y+11);
           Point(x-11,y+12);
           Line(x-10,y+13,x-10,y+17);
           Line(x-11,y+13,x-11,y+17);
           Point(x-6,y+5);
           Point(x-8,y+5);
           Point(x-1,y+19);
           Line(x-1,y+20,x-2,y+20);
           Line(x-1,y+21,x-11,y+21);
           Point(x-11,y+20);
           Line(x-2,y+22,x-10,y+22);
           Line(x-2,y+23,x-11,y+23);
           Line(x-2,y+24,x-11,y+24);
           Line(x-2,y+25,x-11,y+25);
           Line(x-3,y+26,x-11,y+26);
           Line(x-3,y+27,x-11,y+27);
           Line(x-3,y+28,x-10,y+28);
           Line(x-8,y+29,x-10,y+29);
           if not(efface) then if not(bandit) then setcolor(3) else setcolor(1);
           Line(x-6,y+13,x-9,y+13);
           Line(x-6,y+14,x-9,y+14);
           Line(x-4,y+15,x-9,y+15);
           Line(x-4,y+16,x-9,y+16);
           Line(x-5,y+17,x-9,y+17);
           Line(x-5,y+18,x-10,y+18);
           Line(x-5,y+19,x-10,y+19);
           Line(x-4,y+20,x-10,y+20);
           Line(x-3,y+29,x-7,y+29);
           Line(x-2,y+30,x-11,y+30);
           Line(x-2,y+31,x-11,y+31);
           Line(x-1,y+32,x-5,y+32);
           Line(x,y+33,x-4,y+33);
           Line(x,y+34,x-4,y+34);
           Line(x,y+35,x-4,y+35);
           Line(x-1,y+36,x-4,y+36);
           Line(x-2,y+37,x-4,y+37);
           Point(x-3,y+38);
           Line(x-7,y+32,x-11,y+32);
           Line(x-7,y+33,x-10,y+33);
           Line(x-7,y+34,x-10,y+34);
           Line(x-7,y+35,x-10,y+35);
           Line(x-7,y+36,x-10,y+36);
           Line(x-7,y+37,x-11,y+37);
           Line(x-8,y+38,x-12,y+38);
           Line(x-9,y+39,x-13,y+39);
           setcolor(0);
           Point(x-6,y+24);
           Rectangle(x-7,y+25,x-8,y+26);
           Line(x-7,y+27,x-7,y+29);
           end;
if forme=3 then
           begin
           if not(efface) then if not(bandit) then setcolor(1) else setcolor(3);
           Line(x-3,y,x-8,y);
           Line(x-1,y-1,x-9,y-1);
           Line(x,y-2,x-2,y-2);
           Line(x,y-3,x-2,y-3);
           Line(x,y-4,x-1,y-4);
           Point(x,y-5);
           Line(x-9,y-2,x-11,y-2);
           Line(x-10,y-3,x-11,y-3);
           if not(efface) then SetColor(2);
           Line(x-3,y-2,x-7,y-2);
           Line(x-3,y-3,x-8,y-3);
           Line(x-2,y-4,x-9,y-4);
           Line(x-1,y-5,x-9,y-5);
           Line(x,y-6,x-9,y-6);
           Line(x-1,y-7,x-9,y-7);
           Line(x-2,y-8,x-8,y-8);
           Line(x-4,y-9,x-8,y-9);
           Line(x-5,y-10,x-8,y-10);
           Line(x-6,y-11,x-9,y-11);
           Line(x-6,y-12,x-10,y-12);
           Point(x,y-9);
           Line(x,y-10,x-1,y-10);
           Line(x,y-11,x-1,y-11);
           Line(x+1,y-12,x-2,y-12);
           Line(x+2,y-13,x-2,y-13);
           Line(x+2,y-14,x-2,y-14);
           Line(x+2,y-15,x-1,y-15);
           Line(x+1,y-16,x,y-16);
           Line(x-3,y-17,x-4,y-17);
           Line(x-2,y-18,x-5,y-18);
           Line(x-2,y-19,x-5,y-19);
           Line(x-3,y-20,x-4,y-17);
           Line(x-12,y-17,x-13,y-17);
           Line(x-11,y-18,x-14,y-18);
           Line(x-11,y-19,x-14,y-19);
           Line(x-12,y-20,x-14,y-17);
           if not(efface) then if not(bandit) then setcolor(1) else setcolor(3);
           Line(x-1,y-9,x-3,y-9);
           Line(x-2,y-10,x-4,y-10);
           Line(x-2,y-11,x-5,y-11);
           Line(x-3,y-12,x-5,y-12);
           Line(x-3,y-13,x-5,y-13);
           Line(x-3,y-14,x-5,y-14);
           Line(x-2,y-15,x-4,y-15);
           Line(x-1,y-16,x-3,y-16);
           Point(x-2,y-17);
           Point(x-9,y-9);
           Line(x-9,y-10,x-10,y-10);
           Line(x-10,y-11,x-11,y-11);
           Point(x-11,y-12);
           Line(x-10,y-13,x-10,y-17);
           Line(x-11,y-13,x-11,y-17);
           Point(x-6,y-5);
           Point(x-8,y-5);
           Point(x-1,y-19);
           Line(x-1,y-20,x-2,y-20);
           Line(x-1,y-21,x-11,y-21);
           Point(x-11,y-20);
           Line(x-2,y-22,x-10,y-22);
           Line(x-2,y-23,x-11,y-23);
           Line(x-2,y-24,x-11,y-24);
           Line(x-2,y-25,x-11,y-25);
           Line(x-3,y-26,x-11,y-26);
           Line(x-3,y-27,x-11,y-27);
           Line(x-3,y-28,x-10,y-28);
           Line(x-8,y-29,x-10,y-29);
           if not(efface) then if not(bandit) then setcolor(3) else setcolor(1);
           Line(x-6,y-13,x-9,y-13);
           Line(x-6,y-14,x-9,y-14);
           Line(x-4,y-15,x-9,y-15);
           Line(x-4,y-16,x-9,y-16);
           Line(x-5,y-17,x-9,y-17);
           Line(x-5,y-18,x-10,y-18);
           Line(x-5,y-19,x-10,y-19);
           Line(x-4,y-20,x-10,y-20);
           Line(x-3,y-29,x-7,y-29);
           Line(x-2,y-30,x-11,y-30);
           Line(x-2,y-31,x-11,y-31);
           Line(x-1,y-32,x-5,y-32);
           Line(x,y-33,x-4,y-33);
           Line(x,y-34,x-4,y-34);
           Line(x,y-35,x-4,y-35);
           Line(x-1,y-36,x-4,y-36);
           Line(x-2,y-37,x-4,y-37);
           Point(x-3,y-38);
           Line(x-7,y-32,x-11,y-32);
           Line(x-7,y-33,x-10,y-33);
           Line(x-7,y-34,x-10,y-34);
           Line(x-7,y-35,x-10,y-35);
           Line(x-7,y-36,x-10,y-36);
           Line(x-7,y-37,x-11,y-37);
           Line(x-8,y-38,x-12,y-38);
           Line(x-9,y-39,x-13,y-39);
           setcolor(0);
           Point(x-6,y-24);
           Rectangle(x-7,y-25,x-8,y-26);
           Line(x-7,y-27,x-7,y-29);
           end;
if forme=4 then
           begin
           if not(efface) then if not(bandit) then setcolor(1) else setcolor(3);
           LigneI(x-3,y,x-8,y);
           LigneI(x-1,y+1,x-9,y+1);
           LigneI(x,y+2,x-2,y+2);
           LigneI(x,y+3,x-2,y+3);
           LigneI(x,y+4,x-1,y+4);
           PointI(x,y+5);
           LigneI(x-9,y+2,x-11,y+2);
           LigneI(x-10,y+3,x-11,y+3);
           if not(efface) then SetColor(2);
           LigneI(x-3,y+2,x-7,y+2);
           LigneI(x-3,y+3,x-8,y+3);
           LigneI(x-2,y+4,x-9,y+4);
           LigneI(x-1,y+5,x-9,y+5);
           LigneI(x,y+6,x-9,y+6);
           LigneI(x-1,y+7,x-9,y+7);
           LigneI(x-2,y+8,x-8,y+8);
           LigneI(x-4,y+9,x-8,y+9);
           LigneI(x-5,y+10,x-8,y+10);
           LigneI(x-6,y+11,x-9,y+11);
           LigneI(x-6,y+12,x-10,y+12);
           PointI(x,y+9);
           LigneI(x,y+10,x-1,y+10);
           LigneI(x,y+11,x-1,y+11);
           LigneI(x+1,y+12,x-2,y+12);
           LigneI(x+2,y+13,x-2,y+13);
           LigneI(x+2,y+14,x-2,y+14);
           LigneI(x+2,y+15,x-1,y+15);
           LigneI(x+1,y+16,x,y+16);
           LigneI(x-3,y+17,x-4,y+17);
           LigneI(x-2,y+18,x-5,y+18);
           LigneI(x-2,y+19,x-5,y+19);
           LigneI(x-3,y+20,x-4,y+17);
           LigneI(x-12,y+17,x-13,y+17);
           LigneI(x-11,y+18,x-14,y+18);
           LigneI(x-11,y+19,x-14,y+19);
           LigneI(x-12,y+20,x-14,y+17);
           if not(efface) then if not(bandit) then setcolor(1) else setcolor(3);
           LigneI(x-1,y+9,x-3,y+9);
           LigneI(x-2,y+10,x-4,y+10);
           LigneI(x-2,y+11,x-5,y+11);
           LigneI(x-3,y+12,x-5,y+12);
           LigneI(x-3,y+13,x-5,y+13);
           LigneI(x-3,y+14,x-5,y+14);
           LigneI(x-2,y+15,x-4,y+15);
           LigneI(x-1,y+16,x-3,y+16);
           PointI(x-2,y+17);
           PointI(x-9,y+9);
           LigneI(x-9,y+10,x-10,y+10);
           LigneI(x-10,y+11,x-11,y+11);
           PointI(x-11,y+12);
           LigneI(x-10,y+13,x-10,y+17);
           LigneI(x-11,y+13,x-11,y+17);
           PointI(x-6,y+5);
           PointI(x-8,y+5);
           PointI(x-1,y+19);
           LigneI(x-1,y+20,x-2,y+20);
           LigneI(x-1,y+21,x-11,y+21);
           PointI(x-11,y+20);
           LigneI(x-2,y+22,x-10,y+22);
           LigneI(x-2,y+23,x-11,y+23);
           LigneI(x-2,y+24,x-11,y+24);
           LigneI(x-2,y+25,x-11,y+25);
           LigneI(x-3,y+26,x-11,y+26);
           LigneI(x-3,y+27,x-11,y+27);
           LigneI(x-3,y+28,x-10,y+28);
           LigneI(x-8,y+29,x-10,y+29);
           if not(efface) then if not(bandit) then setcolor(3) else setcolor(1);
           LigneI(x-6,y+13,x-9,y+13);
           LigneI(x-6,y+14,x-9,y+14);
           LigneI(x-4,y+15,x-9,y+15);
           LigneI(x-4,y+16,x-9,y+16);
           LigneI(x-5,y+17,x-9,y+17);
           LigneI(x-5,y+18,x-10,y+18);
           LigneI(x-5,y+19,x-10,y+19);
           LigneI(x-4,y+20,x-10,y+20);
           LigneI(x-3,y+29,x-7,y+29);
           LigneI(x-2,y+30,x-11,y+30);
           LigneI(x-2,y+31,x-11,y+31);
           LigneI(x-1,y+32,x-5,y+32);
           LigneI(x,y+33,x-4,y+33);
           LigneI(x,y+34,x-4,y+34);
           LigneI(x,y+35,x-4,y+35);
           LigneI(x-1,y+36,x-4,y+36);
           LigneI(x-2,y+37,x-4,y+37);
           PointI(x-3,y+38);
           LigneI(x-7,y+32,x-11,y+32);
           LigneI(x-7,y+33,x-10,y+33);
           LigneI(x-7,y+34,x-10,y+34);
           LigneI(x-7,y+35,x-10,y+35);
           LigneI(x-7,y+36,x-10,y+36);
           LigneI(x-7,y+37,x-11,y+37);
           LigneI(x-8,y+38,x-12,y+38);
           LigneI(x-9,y+39,x-13,y+39);
           setcolor(0);
           PointI(x-6,y+24);
           Rectangle(y+7,x-25,y+8,x-26);
           LigneI(x-7,y+27,x-7,y+29);
           end;
setcolor(cc);
end;

Procedure MetBombe(x,y:integer);
var cc:integer;
begin
cc:=getcolor;
Setcolor(3);
Point(x+5,y);
line(x+3,y+1,x+4,y+1);
Point(x+3,y+2);
setcolor(2);
Line(x+2,y+3,x+4,y+3);
Line(x+1,y+4,x+5,y+4);
Line(x,y+5,x+6,y+5);
Line(x,y+6,x+6,y+6);
Line(x,y+7,x+6,y+7);
Line(x+2,y+9,x+4,y+9);
Line(x+1,y+8,x+5,y+8);
SetColor(cc);
end;

Procedure MetClef(x,y:integer);
Var cc:integer;
begin
cc:=getcolor;
SetColor(3);
Line(x+1,y-1,x+2,y-1);
Line(x,y,x+3,y);
Line(x,y,x,y+3);
Line(x-1,y+1,x-1,y+2);
Line(x+3,y,x+3,y+3);
Line(x+1,y+4,x+2,y+4);
Line(x+1,y+3,x+2,y+3);
Line(x+4,y+1,x+7,y+1);
Line(x+5,y+1,x+10,y+1);
Line(x+4,y+2,x+10,y+2);
Line(x+9,y+3,x+10,y+3);
Line(x+9,y+4,x+10,y+4);
setcolor(cc);
end;

Procedure EffDirect;
begin
if not(genereT) then exit;
GenereT:=false;
PutImage(20,5,genere^,NormalpUt);
end;

Procedure AffDirect(Haut,Bas,Droite,Gauche:boolean);
begin
GenereT:=true;
Fenetre(20,5,55,45,genere);
SetViewPort(20,5,75,50,ClipOff);
ClearViewPort;
SetColor(1);
SetViewport(0,0,319,199,ClipOn);
Rectangle(20,5,75,50);
SetColor(2);
if haut then
        begin
        Moveto(45,25);Lineto(45,20);
        Lineto(40,20);Lineto(47,10);
        Lineto(55,20);Lineto(50,20);
        Lineto(50,25);Lineto(45,25);
        end;
if bas then
        begin
        Moveto(45,30);Lineto(45,35);
        Lineto(40,35);Lineto(47,45);
        Lineto(55,35);Lineto(50,35);
        Lineto(50,30);Lineto(45,30);
        end;
if droite then
        begin
        Moveto(55,25);Lineto(60,25);
        Lineto(60,20);Lineto(70,27);
        Lineto(60,35);Lineto(60,30);
        Lineto(55,30);Lineto(55,25);
        end;
if gauche then
        begin
        Moveto(40,25);Lineto(35,25);
        Lineto(35,20);lineto(25,27);
        Lineto(35,35);Lineto(35,30);
        Lineto(40,30);Lineto(40,25);
        end;
end;

Procedure Escalier(x,y,marches,largeur:integer);
Var k:integer;
begin
k:=0;
repeat
Bar3D(x+k,y-10-k,x+10+k,y,largeur,TopOn);
k:=k+10;
until k=marches*10;
end;

Procedure Regle;
begin
Cleardevice;
SetTextStyle(2,0,4);
outtextXY(5,5,'Le roi du pays est trŠs malade... Seul le M‚daillon du');
outtextXY(5,15,'Savoir peut connaŒtre le remŠde de cette myst‚rieuse');
outtextXY(5,25,'maladie. Mais ce m‚daillon se trouve dans un chƒteau');
outtextXY(5,35,'o— les piŠges ne sont pas toujours la cause des cada-');
outtextXY(5,45,'vres retrouv‚s,transperc‚s par une lance ou une ‚p‚e.');
OuttextXY(5,65,'Le roi d‚cida d''envoyer son plus valeureux chevalier,');
outtextXY(5,75,'le plus courageux, le plus t‚m‚raire de tous : VOUS ...');
outtextXY(5,85,'Vous devez donc partir dans ce chƒteau sans une seule arme');
outtextXY(5,95,'ni une armure... rien que l''intelligence que vous');
outtextXY(5,105,'poss‚dez...');
outtextXY(5,135,'Partez chevalier, et ne revenez pas sans le m‚daillon...');
SetTextStyle(2,0,7);
outtextXY(100,160,'BONNE CHANCE !');
ch:=readkey;
end;

Procedure Piece1(deja:byte);
begin
Cleardevice;
SetfillStyle(9,1);
SetColor(3);
Escalier(150,180,7,4);
SetColor(3);
SetFillStyle(1,3);
SetFillPattern(Plancher,3);
Bar(0,180,319,190);
Bar(210,104,319,110);
Bar(0,104,140,110);
Bar(0,34,130,40);
Bar(200,34,319,40);
SetFillStyle(1,2);
Bar(312,40,319,104);
Bar(308,76,312,80);
Bar(312,110,319,180);
Bar(308,152,312,156);
PutImage(260,170,Clef^,XORPUT);
Putimage(20,93,bombe^,XORPUT);
Setcolor(2);
Rectangle(260,80,280,104);
setcolor(1);
Line(270,90,250,90);
Circle(250,90,2);
Circle(250,90,3);
if deja=1 then
          begin
          PutImage(10,140,Homme^,XORPUT);
          AffDirect(false,false,true,false);
          LitCar(ch,[#27,#205]);
          EffDirect;
          if ch=#27 then begin CloseGraph;TextMode(origMode);Halt; end;
          i:=10;
          repeat
          sound(60);
          delay(50);
          Nosound;
          delay(250);
          PutImage(i,140,Homme^,XORPUT);
          i:=i+10;
          PutImage(i,140,Homme^,XORPUT);
          until i>=120;
          AffDirect(true,false,true,true);
          LitCar(ch,[#203,#205,#27,#200]);
          end;
end;

Procedure debut;
Begin
Cleardevice;
setfillpattern(briques,2);
LINE(0,71,81,71);
LINE(81,71,100,52);
LINE(100,52,132,52);
LINE(132,52,147,37);
LINE(147,37,0,37);
LINE(0,37,147,37);
ELLIPSE(11,36,0,180,5,5);
ELLIPSE(12,32,0,180,4,4);
ELLIPSE(16,33,0,180,7,8);
ELLIPSE(20,26,0,180,7,8);
ELLIPSE(26,20,0,180,5,8);
ELLIPSE(20,37,0,180,8,8);
ELLIPSE(24,30,0,180,7,6);
ELLIPSE(36,35,0,180,7,7);
ELLIPSE(36,29,0,180,7,10);
ELLIPSE(31,21,0,180,2,3);
ELLIPSE(47,38,0,180,5,12);
LINE(319,25,310,25);
LINE(310,25,310,14);
LINE(310,14,301,14);
LINE(301,14,301,24);
LINE(301,24,301,14);
LINE(300,24,294,24);
LINE(294,24,294,14);
LINE(294,14,286,14);
LINE(286,14,286,24);
LINE(286,24,279,24);
LINE(279,24,279,14);
LINE(279,14,271,14);
LINE(271,14,271,24);
LINE(271,24,264,24);
LINE(264,24,264,14);
LINE(264,14,256,14);
LINE(256,14,256,24);
LINE(256,23,269,54);
LINE(269,54,269,61);
LINE(269,61,319,61);
LINE(276,62,276,177);
LINE(276,177,260,199);
LINE(252,199,250,196);
LINE(0,157,185,157);
LINE(185,157,185,199);
LINE(186,156,186,162);
LINE(186,162,276,162);
LINE(187,156,276,156);
LINE(218,155,275,108);
LINE(186,178,275,178);
LINE(212,194,222,192);
LINE(231,185,247,185);
LINE(199,185,203,186);
LINE(234,193,250,190);
FLOODFILL(293,33,3);
FLOODFILL(299,96,3);
setfillstyle(9,3);
FLOODFILL(97,182,3);
SetfillStyle(1,1);
FLOODFILL(215,182,3);
setfillPattern(pont,3);
FLOODFILL(228,160,3);
setFillStyle(11,3);
FLOODFILL(48,51,3);
delay(1000);
SetBkcolor(lightBlue);
SetFillstyle(1,3);
FillEllipse(320,0,30,30);
i:=0;
repeat
sound(random(4000)+1000);
delay(random(600));
Nosound;
i:=i+1;
until (keypressed) or (i=20);
SetWriteMode(1);
i:=200;
w:=20;
PutImage(20,117,Homme^,XORPUT);
repeat
sound(60);
delay(50);
Nosound;
delay(250);
Putimage(w,117,Homme^,XORPUT);
w:=w+10;
Putimage(w,117,Homme^,XORPUT);
until w>=162;
AffDirect(false,false,true,true);
LitCar(ch,[#203,#205,#27]);
EffDirect;
if ch=#27 then begin CloseGraph;TextMode(origMode);Halt; end;
if ch=#203 then
           begin
           PutImage(w,117,homme^,XORPUT);
           w:=162;
           PutImage(w,117,homme2^,XORPUT);
           repeat
           sound(60);
           Delay(50);
           Nosound;
           delay(250);
           PutImage(w,117,homme2^,XORPUT);
           w:=w-8;
           PutImage(w,117,homme2^,XORPUT);
           until w<=10;
           i:=w;
           w:=300;
           repeat
           setcolor(1);
           Line(w,130,w+8,130);
           Line(w,130,w+8,131);
           Line(w,130,w+8,132);
           Line(w,130,w+8,133);
           setcolor(0);
           Line(w,130,w+8,130);
           Line(w,130,w+8,131);
           Line(w,130,w+8,132);
           Line(w,130,w+8,133);
           w:=w-3;
           until w<=10;
           SetTextStyle(4,0,2);
           w:=1;
           t:=2;
           repeat
           setColor(w);
           w:=w+1;
           if t=2 then begin
                       PutImage(i,117,homme2^,XORPUT);
                       PutImage(i,103,homme3^,XORPUT);
                       end;
           if t=1 then begin
                       PutImage(i,103,homme3^,XORPUT);
                       PutImage(i,117,homme2^,XORPUT);
                       end;
           if t=1 then t:=2 else t:=1;
           if w=4 then w:=1;
           outtextXY(126,80,'THE END');
           outtextXY(127,80,'THE END');
           outtextXY(128,80,'THE END');
           until keypressed;
           end;
if ch=#205 then
           begin
           PutImage(w,117,homme^,XORPUT);
           w:=165;
           PutImage(w,117,homme^,XORPUT);
           repeat
           sound(60);
           Delay(50);
           Nosound;
           delay(250);
           PutImage(w,117,homme^,XORPUT);
           w:=w+8;
           PutImage(w,117,homme^,XORPUT);
           until w>=255;
           PutImage(w,117,homme^,XORPUT);
           i:=w;
           w:=300;
           repeat
           setcolor(1);
           Line(w,130,w+8,130);
           Line(w,130,w+8,131);
           Line(w,130,w+8,132);
           Line(w,130,w+8,133);
           setcolor(0);
           Line(w,130,w+8,130);
           Line(w,130,w+8,131);
           Line(w,130,w+8,132);
           Line(w,130,w+8,133);
           w:=w-3;
           until w<=10;
           Piece1(1);
           end;
End;

Begin
genereT:=false;
origMode:=LastMode;
pilote:=CGA;
mode:=CGAHi;
{InitGraph(Pilote,mode,'');
VerifyGraph;
SetTextStyle(0,0,0);
i:=0;
VerifyGraph;
repeat
SetTextStyle(1,0,i+1);
SetTextJustify(1,1);
outtextXY(320,i*10+10,'CASTLE ADVENTURE');
i:=i+1;
until i=6;
i:=6;
w:=13;
repeat
SetTextStyle(1,0,i);
SetTextJustify(1,1);
outtextXY(320,w*10+10,'CASTLE ADVENTURE');
w:=w+1;
i:=i-1;
until i=0;
setTextstyle(1,0,7);
outtextXY(319,98,'CASTLE ADVENTURE');
outtextXY(321,98,'CASTLE ADVENTURE');
outtextXY(318,98,'CASTLE ADVENTURE');
outtextXY(322,98,'CASTLE ADVENTURE');
outtextXY(317,98,'CASTLE ADVENTURE');
outtextXY(323,98,'CASTLE ADVENTURE');
randomize;
i:=9;
setcolor(1);
repeat
sound(random(3000)+500);
delay(random(600));
setBkcolor(i);
i:=i+1;
if i=16 then i:=9;
Nosound;
until keypressed;
i:=0;
ch:=readkey;
repeat
SetBKcolor(i);
delay(50);
i:=i+1;
if i=16 then i:=9;
until keypressed;
ch:=readkey;}
mode:=CGAC0;
initgraph(pilote,mode,'');
MetHomme(200,100,false,false,1);
fenetre(194,100,22,40,Homme);
ClearDevice;
MetHomme(200,100,false,false,2);
Fenetre(172,100,32,40,Homme2);
Cleardevice;
MetHomme(200,100,false,false,3);
Fenetre(175,60,32,40,Homme3);
Cleardevice;
MetHomme(100,200,false,false,4);
Fenetre(200,80,40,26,Homme4);
Cleardevice;
MetClef(200,100);
Fenetre(199,99,12,7,Clef);
MetHomme(200,100,false,true,1);
fenetre(194,100,22,40,Bandit);
ClearDevice;
MetHomme(200,100,false,true,2);
Fenetre(172,100,32,40,Bandit2);
Cleardevice;
MetHomme(200,100,false,true,3);
Fenetre(175,60,32,40,bandit3);
Cleardevice;
MetHomme(100,200,false,true,4);
Fenetre(200,80,40,26,bandit4);
Cleardevice;
MetBombe(200,100);
fenetre(200,100,8,11,bombe);
regle;
debut;
end.